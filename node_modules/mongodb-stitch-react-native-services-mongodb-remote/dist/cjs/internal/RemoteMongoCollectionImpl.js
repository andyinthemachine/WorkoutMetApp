"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var RemoteMongoReadOperation_1 = __importDefault(require("../RemoteMongoReadOperation"));
var RemoteMongoCollectionImpl = (function () {
    function RemoteMongoCollectionImpl(proxy) {
        this.proxy = proxy;
        this.namespace = this.proxy.namespace;
    }
    RemoteMongoCollectionImpl.prototype.withCollectionType = function (codec) {
        return new RemoteMongoCollectionImpl(this.proxy.withCollectionType(codec));
    };
    RemoteMongoCollectionImpl.prototype.count = function (query, options) {
        return this.proxy.count(query, options);
    };
    RemoteMongoCollectionImpl.prototype.find = function (query, options) {
        return new RemoteMongoReadOperation_1.default(this.proxy.find(query, options));
    };
    RemoteMongoCollectionImpl.prototype.findOneAndUpdate = function (query, update, options) {
        return this.proxy.findOneAndUpdate(query, update, options);
    };
    RemoteMongoCollectionImpl.prototype.findOneAndReplace = function (query, replacement, options) {
        return this.proxy.findOneAndReplace(query, replacement, options);
    };
    RemoteMongoCollectionImpl.prototype.findOneAndDelete = function (query, options) {
        return this.proxy.findOneAndDelete(query, options);
    };
    RemoteMongoCollectionImpl.prototype.findOne = function (query, options) {
        return this.proxy.findOne(query, options);
    };
    RemoteMongoCollectionImpl.prototype.aggregate = function (pipeline) {
        return new RemoteMongoReadOperation_1.default(this.proxy.aggregate(pipeline));
    };
    RemoteMongoCollectionImpl.prototype.insertOne = function (doc) {
        return this.proxy.insertOne(doc);
    };
    RemoteMongoCollectionImpl.prototype.insertMany = function (docs) {
        return this.proxy.insertMany(docs);
    };
    RemoteMongoCollectionImpl.prototype.deleteOne = function (query) {
        return this.proxy.deleteOne(query);
    };
    RemoteMongoCollectionImpl.prototype.deleteMany = function (query) {
        return this.proxy.deleteMany(query);
    };
    RemoteMongoCollectionImpl.prototype.updateOne = function (query, update, updateOptions) {
        return this.proxy.updateOne(query, update, updateOptions);
    };
    RemoteMongoCollectionImpl.prototype.updateMany = function (query, update, updateOptions) {
        return this.proxy.updateMany(query, update, updateOptions);
    };
    return RemoteMongoCollectionImpl;
}());
exports.default = RemoteMongoCollectionImpl;
//# sourceMappingURL=RemoteMongoCollectionImpl.js.map