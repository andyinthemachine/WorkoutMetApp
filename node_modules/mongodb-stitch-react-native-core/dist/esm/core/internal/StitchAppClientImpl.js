import { CoreStitchAppClient, CoreStitchServiceClientImpl, StitchAppClientInfo, StitchAppRequestClient, StitchAppRoutes } from "mongodb-stitch-core-sdk";
import StitchServiceClientImpl from "../../services/internal/StitchServiceClientImpl";
import StitchAuthImpl from "../auth/internal/StitchAuthImpl";
var StitchAppClientImpl = (function () {
    function StitchAppClientImpl(clientAppId, config) {
        this.info = new StitchAppClientInfo(clientAppId, config.dataDirectory, config.localAppName, config.localAppVersion);
        this.routes = new StitchAppRoutes(this.info.clientAppId);
        var requestClient = new StitchAppRequestClient(clientAppId, config.baseUrl, config.transport);
        this.auth = new StitchAuthImpl(requestClient, this.routes.authRoutes, config.storage, this.info);
        this.coreClient = new CoreStitchAppClient(this.auth, this.routes);
    }
    StitchAppClientImpl.prototype.getServiceClient = function (factory, serviceName) {
        if (isServiceClientFactory(factory)) {
            return factory.getClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, ""), this.info);
        }
        else {
            return factory.getNamedClient(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName), this.info);
        }
    };
    StitchAppClientImpl.prototype.getGeneralServiceClient = function (serviceName) {
        return new StitchServiceClientImpl(new CoreStitchServiceClientImpl(this.auth, this.routes.serviceRoutes, serviceName));
    };
    StitchAppClientImpl.prototype.callFunction = function (name, args) {
        return this.coreClient.callFunction(name, args);
    };
    StitchAppClientImpl.prototype.close = function () {
        this.auth.close();
    };
    return StitchAppClientImpl;
}());
export default StitchAppClientImpl;
function isServiceClientFactory(factory) {
    return factory.getClient !== undefined;
}
//# sourceMappingURL=StitchAppClientImpl.js.map