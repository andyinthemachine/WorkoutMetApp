"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_native_1 = require("react-native");
var stitchPrefixKey = "__stitch.client";
var RNAsyncStorage = (function () {
    function RNAsyncStorage(suiteName) {
        this.suiteName = suiteName;
        this.cachedStorage = {};
    }
    RNAsyncStorage.prototype.refreshCache = function () {
        var _this = this;
        return react_native_1.AsyncStorage.getAllKeys()
            .then(function (keys) { return react_native_1.AsyncStorage.multiGet(keys); })
            .then(function (values) {
            _this.cachedStorage = {};
            values.forEach(function (element) {
                var key = element[0];
                var value = element[1];
                _this.cachedStorage[key] = value;
            });
        });
    };
    RNAsyncStorage.prototype.get = function (key) {
        return this.cachedStorage[this.getKey(key)];
    };
    RNAsyncStorage.prototype.set = function (key, value) {
        this.cachedStorage[this.getKey(key)] = value;
        react_native_1.AsyncStorage.setItem(this.getKey(key), value);
    };
    RNAsyncStorage.prototype.remove = function (key) {
        delete this.cachedStorage[this.getKey(key)];
        react_native_1.AsyncStorage.removeItem(this.getKey(key));
    };
    RNAsyncStorage.prototype.getKey = function (forKey) {
        return stitchPrefixKey + "." + this.suiteName + "." + forKey;
    };
    return RNAsyncStorage;
}());
exports.default = RNAsyncStorage;
//# sourceMappingURL=RNAsyncStorage.js.map